# #표시는 프로그래밍에서 주석이라 말한다.
# 주석은 파이썬의 인터프리터가 인식하지 못하도록 기호
# 단축키는 컨트롤 슬래시 

# 아래 a=1의 의미는 a와 1이 같다라는 의미가 아니라 
# a라는 이름의 변수에 1을 담겠다라는 의미임. 
a=1
b='1'
# print는 실행 후 결과값을 가시적으로 보여주기 위해 터미널창에 출력하는 것.
# print(a)
# print(b)


# 변수명명규칙
# 변수명을 지을떄는 숫자가 맨앞에 오면 안됌
# 변수명 중간에 띄어쓰기, 특수기호 등을 일반적으로 쓰지않는다.
# 특수기호는 별로 안사용하는데 언더바는 많이 사용한다
# 변수 자료형 출력해보기
# print(type(a))
# print(type(b))

# c=2.14353
# print(type(c))

# # 자료의 형변환 
# # str(숫자)-> 문자, int(실수) -> 정수 

# a=10
# b=20
# # 결과값이 1020이 나오도록 덧셈을 하여라
# c=int(str(a)+str(b))
# print(c)

# # d의 소수부분을 잘라라 
# d=2333.22316543542
# print(int(d))


# 문자 자료형
# 문자는 "" or ''
# 'a'라는 문자를 변수에 저장하면, 메모리에 어떤 숫자값으로 저장될까 ? 
# y='a'
# print(ord(y))
# 아스키코드라는 문자와 매핑되는 테이블을 사용하여 약속된 숫자값으로 저장하고,
# 현대에는 아스키코드와 표현범위의 한계로 인해, utf-8을 표준으로 지정하였음.

# x='A'
# print(ord(x))

# multi line으로 문자열을 표현하고 싶으면, 쩜따옴표 3개를 사용하거나
# 쌍따옴표 3개를 사용하면 된다
# a='''hello
# world'''
# 이스케이프 문을 이용한 줄바꿈 
# 이스케이프 문이란 '\n' or '\t' 등의 특수기호를 말한다.
# \n은 줄바꿈, \t 는 tab키랑 동일 
# 역슬래시 또 다른 활용 : 특수문자를 있는 그대로 표현하는 역할 
# a= "hello \n world"
# print(a)
# # 그렇다면 python's easy 라는 문구 출력
# b="python's easy"
# print(b)

# c="쌍따옴표는(\") 파이선에서 문자를 의미한다"
# print(c)

# 문자열 더하기 곱하기 
# a라는 변수에 python, b에는 funny라는 문자열 담는다, c에는 a b 둘다 더한것 출력
a='python '
b='is funny'
c=a+b
print(c)

# python 이라는 문자열이 두번 출력, is fun 은 한번
c= a*2+b
print(c)

# 파이선에서 인덱스란, 특정위치를 가리키는 용도로 사용됌.
# 인덱스의 사용방법은 원하는 대상의 [숫자값]
# 프로그래밍에서는 대부분의 순서는 0부터 시작된다. 01234...
# 문자 h를 출력하라 
A="Python's fun Python's fun Python's fun"
print(A[3])

# 문자열의 마지막 문자를 출력하자
print(A[-1])
# 문자열의 길이를 출력
print(len(A))
print(A[len(A)-1])

# 슬라이싱 
# 몇번째부터 몇번째까지 잘라낸다.
# 대상이 되는 값[시작:끝] -> 시작<= 값 < 끝 
# python만 잘라내기
a= "python is fun"
b=a[:6]
print(b)
# x y 자리에 값이 없으면 처음부터 혹은 끝까지임. 
# 6번째 부터 끝까지 잘라내서 b에 담아 출력
c=a[6:]
print(c) 

# a[x:y:z] -> z는 z-1개씩 건너뛰고,
# 2번째 이상 7번째 미만 문자열 중에 1개씩 건너뛰고 b에담아 출력.
b=a[2:7:2]
print(b)

# a에서 슬라이싱 이용해 date에 날짜, day에 칠드런스데이
a="20220505children's_day"
date=a[:8]
day=a[8:]
print(date)
print(day)

# 